services:
  frontend:
    image: frontend
    container_name: frontend
    build:
      context: ./frontend
      dockerfile: Dockerfile
    ports:
      - 3000:3000
    stdin_open: true
    volumes:
      - ./frontend:/frontend
      - /frontend/node_modules
  
  postgres:
    image: postgres
    container_name: postgresql
    restart: always
    ports:
      - 5432:5432
    environment:
      POSTGRES_DB: postgre
      POSTGRES_USER: gggg
      POSTGRES_PASSWORD: password
    volumes:
      - postgres_data_dev:/var/lib/postgresql/data

  pgadmin:
    image: dpage/pgadmin4
    restart: always
    environment:
      PGADMIN_DEFAULT_EMAIL: teamg@gmail.com
      PGADMIN_DEFAULT_PASSWORD: password
      PGADMIN_LISTEN_PORT: 8080
    ports:
      - 8080:8080
    volumes:
      - postgre_admin_data_dev:/var/lib/pgadmin
    depends_on:
      - postgres
    links:
    - "postgres:sql-server"

  redis:
    image: redis:alpine
    container_name: redis
    ports:
      - 6379:6379
    command: redis-server --port 6379

  backend:
    image: backend
    container_name: backend
    restart: always
    build:
      context: ./backend
      dockerfile: Dockerfile
    ports:
      - 8000:8000
    volumes:
      - ./backend:/backend
    depends_on:
      - postgres
      - redis
    environment:
      POSTGRES_NAME: postgre
      POSTGRES_USER: gggg
      POSTGRES_PASSWORD: password
    links:
      - postgres:postgres
    
  rabbitmq:
    image: rabbitmq:3-management
    container_name: rabbitmq
    restart: unless-stopped
    command: rabbitmq-server
    environment:
      RABBITMQ_DEFAULT_USER: rabbit
      RABBITMQ_DEFAULT_PASS: rabbit
    ports:
      - 5672:5672
      - 15672:15672
    depends_on:
      - backend
  
  prometheus:
      image: prom/prometheus
      container_name: prometheus
      ports:
        - 9090:9090
      volumes:
        - ./monitoring/prometheus.yml:/etc/prometheus/prometheus.yml
      command:
        - '--config.file=/etc/prometheus/prometheus.yml'
      depends_on:
        - backend
      restart: always

  grafana:
    image: grafana/grafana
    container_name: grafana
    ports:
      - 3333:3000
    volumes:
      - ./monitoring/grafana.yml:/etc/grafana/provisioning/grafana.yml
    restart: always
    depends_on:
      - prometheus

volumes:
  postgres_data_dev: null
  postgre_admin_data_dev: null